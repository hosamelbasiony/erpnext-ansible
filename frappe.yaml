---
# ansible-playbook frappe.yaml -i inventory --extra-vars "ansible_sudo_pass=asd"
# apt-get install openjdk-8-jdk-headless
# wget https://d28dx6y1hfq314.cloudfront.net/144/18748/any/package_files/4308263.deb?t=1692929154_b914d536aefa76df9a3c900dc253330ec7c203ad
# dpkg -i rundeck_4.15.0.20230725-1_all.deb
# rundeckd [start|stop|restart|condrestart|status]
# /etc/init.d/rundeckd start
# http://192.168.1.9:4440/ => admin - admin
# /etc/init.d/rundeckd stop

# mkdir semaphore
# cd semaphore
# sudo wget https://github.com/ansible-semaphore/semaphore/releases/download/v2.8.75/semaphore_2.8.75_linux_amd64.deb
# sudo dpkg -i semaphore_2.8.75_linux_amd64.deb
# sudo semaphore setup
# sudo semaphore service --config=./config.json
- hosts: nodes
  become: yes
  vars:
     mysql_root_username: "root"
     mysql_root_password: "asd"
     mysql_user_name: "root"
     NODEJS_VERSION: "18"
     
  tasks:  
  
    - name: Remove file (sources.list)
      file:
        path: /etc/apt/sources.list
        state: absent
    
    - name: Fix broken packages
      command:
        cmd: 'sudo dpkg --configure -a'
        
    - name: Update repositories cache
      apt:
        update_cache: yes
    
    - name: install pre-requisites
      apt:
        name:
        - git 
        - python3-dev 
        - python3-setuptools 
        - python3-pip 
        - virtualenv 
        - python3.10-venv
        - software-properties-common
        - mariadb-server=1:10.6.12-0ubuntu0.22.04.1
        - libmysqlclient-dev
        - redis-server 
        - curl 
        - xvfb  
        - libfontconfig
        - wkhtmltopdf 
        
    - name: Install pymysql python package
      ansible.builtin.pip:
        name: pymysql


    - name: Make sure mariadb running 
      service:
        name: mariadb
        state: started
        enabled: True
        
    - name: install something and configure that thing
      block:
        - name: Ensure default user is present.
          mysql_user:
            login_unix_socket: /var/run/mysqld/mysqld.sock
            name: "root"
            host: 'localhost'
            password: "asd"
            priv: '*.*:ALL,GRANT'
            state: present

        - name: Make sure mariadb running 
          service:
            name: mariadb
            state: restarted
            enabled: True
          
      rescue:
        - name: rollback
          shell: "echo 'uninstall that thing'"


    - name: Install the gpg key for nodejs LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present
    
    - name: Install the nodejs LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ NODEJS_VERSION }}.x {{ ansible_distribution_release }} main"
        state: present
        update_cache: yes

    - name: Install the nodejs
      apt:
        name: nodejs
        state: present
     
    - name: Install yarn
      command:
        cmd: 'sudo npm install -g yarn'

    - name: Install frappe-bench
      command:
        cmd: 'sudo -H pip3 install frappe-bench'
     
    - name: Test for specific line in /etc/mysql/mariadb.conf.d/50-server.cnf
      shell: grep -c "^pid-file = /run/mysqld/mysqld.pid" /etc/mysql/mariadb.conf.d/50-server.cnf || true
      register: test_grep
  
    - name: add lines
      lineinfile: 
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf
        line: '{{ item }}'
      with_items:
      - '[server]'
      - 'user = mysql'
      - 'pid-file = /run/mysqld/mysqld.pid' 
      - 'socket = /run/mysqld/mysqld.sock' 
      - 'basedir = /usr' 
      - 'datadir = /var/lib/mysql' 
      - 'tmpdir = /tmp' 
      - 'lc-messages-dir = /usr/share/mysql' 
      - 'bind-address = 127.0.0.1' 
      - 'query_cache_size = 16M' 
      - 'log_error = /var/log/mysql/error.log' 
      - '[mysqld]' 
      - 'innodb-file-format=barracuda' 
      - 'innodb-file-per-table=1' 
      - 'innodb-large-prefix=1' 
      - 'character-set-client-handshake = FALSE' 
      - 'character-set-server = utf8mb4' 
      - 'collation-server = utf8mb4_unicode_ci' 
      - '[mysql]' 
      - 'default-character-set = utf8mb4' 
      when: test_grep.stdout == "0"
      
    - name: Make sure mariadb running 
      service:
        name: mariadb
        state: restarted
        enabled: True

    - name: Create frappe-bench
      become: no
      command:
        cmd: 'bench init --frappe-branch=version-14 --python python3.10 frappe-bench-demo'
  
    - name: Install apps inside the new frappe-bench
      shell: |
        cd ./frappe-bench-demo
        bench get-app erpnext --branch version-14
        bench get-app payments
        bench get-app hrms
        bench get-app healthcare

    - name: Create demo site
      shell: |
        cd ./frappe-bench-demo
        bench new-site demo.tarqim.info --db-name demo_app_erp --mariadb-root-username root --mariadb-root-password asd --admin-password asd --verbose --force
        touch ./sites/currentsite.txt
        echo "demo.tarqim.info" > ./sites/currentsite.txt        
        bench --site demo.tarqim.info install-app erpnext
        bench --site demo.tarqim.info install-app payments
        bench --site demo.tarqim.info install-app healthcare
        bench --site demo.tarqim.info install-app hrms

    
    
# bench drop-site demo.tarqim.info --force

# ansible [core 2.15.2]
#   config file = /var/ansible/ansible_test/ansible.cfg
#   configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
#   ansible python module location = /usr/lib/python3/dist-packages/ansible
#   ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
#   executable location = /usr/bin/ansible
#   python version = 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] (/usr/bin/python3)
#   jinja version = 3.0.3
#   libyaml = True

        
